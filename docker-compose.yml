services:
  # Contenedor de descarga para las encuestas de ENEMDU
  enemdu_descarga:
    build:
      context: ./scripts_descarga
      dockerfile: Dockerfile
    container_name: enemdu_descarga
    # Sin restart: para que termine y salga cuando acabe el script
    volumes:
      - ./data/raw/ANUAL:/data/raw/ANUAL:rw
      - ./data/enemdu_persona/processed:/data/enemdu_persona/processed:rw
      - ./data/enemdu_persona/unprocessed:/data/enemdu_persona/unprocessed:rw
      - ./data/enemdu_vivienda/processed:/data/enemdu_vivienda/processed:rw
      - ./data/enemdu_vivienda/unprocessed:/data/enemdu_vivienda/unprocessed:rw
    environment:
      ENEMDU_ROOT:       /data/raw/ANUAL
      PERSONA_UNPROC:    /data/enemdu_persona/unprocessed
      PERSONA_PROCESSED: /data/enemdu_persona/processed
      VIVIENDA_UNPROC:   /data/enemdu_vivienda/unprocessed
      VIVIENDA_PROCESSED: /data/enemdu_vivienda/processed
    command: >
      sh -c "python -u enemdu_descarga.py &&
             python -u limpieza_persona.py &&
             python -u limpieza_vivienda.py"

  # Contenedor para la base de datos (ClickHouse)
  clickhouse:
    image: yandex/clickhouse-server:latest
    container_name: clickhouse
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./init-scripts/clickhouse:/docker-entrypoint-initdb.d:ro
    environment:
      - CLICKHOUSE_USER=admin
      - CLICKHOUSE_PASSWORD=secret_pw
      - CLICKHOUSE_DB=indicadores
    ports:
      - "8123:8123"
      - "9000:9000"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8123/ping || exit 1
      interval: 10s
      timeout: 5s
      retries: 5

  # Contenedor para la ingesta de los CSV a la base de datos
  ingest:
    build:
      context: ./ingest
      dockerfile: Dockerfile
    container_name: enemdu_ingest
    # Sin restart: sale cuando acaben los scripts
    depends_on:
      clickhouse:
        condition: service_healthy
      enemdu_descarga:
        condition: service_completed_successfully
    volumes:
      # CSVs diccionario
      - ./data/diccionario/unprocessed:/data/diccionario/unprocessed:rw
      - ./data/diccionario/processed:/data/diccionario/processed:rw
      # CSVs enemdu_persona
      - ./data/enemdu_persona/unprocessed:/data/enemdu_persona/unprocessed:rw
      - ./data/enemdu_persona/processed:/data/enemdu_persona/processed:rw
      # CSVs enemdu_vivienda
      - ./data/enemdu_vivienda/unprocessed:/data/enemdu_vivienda/unprocessed:rw
      - ./data/enemdu_vivienda/processed:/data/enemdu_vivienda/processed:rw
      # Logs y errores
      - ./ingest/logs:/ingest/logs:rw
      - ./ingest/errors:/ingest/errors:rw
    environment:
      - CH_HOST=clickhouse
      - CH_PORT=9000
      - CH_USER=admin
      - CH_PASSWORD=secret_pw
      - CH_DATABASE=indicadores
      # Directorios de diccionario
      - CODIGOS_DIR=/data/diccionario/unprocessed
      - PROCESSED_DIR_CODIGOS=/data/diccionario/processed
      # Directorios de enemdu_persona
      - PERSONA_DIR=/data/enemdu_persona/unprocessed
      - PROCESSED_DIR_PERSONA=/data/enemdu_persona/processed
      # Directorios de enemdu_vivienda
      - VIVIENDA_DIR=/data/enemdu_vivienda/unprocessed
      - PROCESSED_DIR_VIVIENDA=/data/enemdu_vivienda/processed
      # Logs y errores
      - LOG_DIR=/ingest/logs
      - ERR_DIR=/ingest/errors
      # Comportamiento en caso de error
      - STOP_ON_ERROR=true
    command: >
      sh -c "python ingest_codigos.py &&
             python ingest_vivienda.py &&
             python ingest_persona.py"

  # Contenedor para la visualizaci√≥n de indicadores (Superset)
  superset:
    image: apache/superset:latest
    container_name: superset
    restart: always
    environment:
      - SUPERSET_LOAD_EXAMPLES=no
      - SUPERSET_SECRET_KEY=your_superset_secret
      - DATABASE_DIALECT=clickhouse
      - DATABASE_HOST=clickhouse
      - DATABASE_PORT=8123
      - DATABASE_DB=indicadores
      - DATABASE_USER=admin
      - DATABASE_PASSWORD=secret_pw
    ports:
      - "8088:8088"
    depends_on:
      ingest:
        condition: service_completed_successfully
      clickhouse:
        condition: service_healthy
    volumes:
      - superset_home:/home/superset
      - ./init-scripts/superset:/app/superset-init:ro
    entrypoint:
      - "/bin/sh"
      - "-c"
      - |
        pip install clickhouse-sqlalchemy clickhouse-driver "sqlalchemy==1.4.54" clickhouse-connect && \
        superset fab create-admin \
          --username admin \
          --firstname Admin \
          --lastname User \
          --email admin@example.com \
          --password admin && \
        superset db upgrade && \
        python /app/superset-init/init_superset_db.py && \
        superset init && \
        exec superset run -h 0.0.0.0 -p 8088

volumes:
  clickhouse_data:
  superset_home:
